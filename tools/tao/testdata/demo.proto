syntax = "proto3";

import "tao.proto";

package DemoService.v1;

option (app) = "Core";
option (resource) = "DemoService";

// Communication/Messaging Pattern

// RPC (public) Request/Response
service DemoRpc {
    rpc Create(NewThing) returns (NewThingResult);
}

// Socket (public) define bi-direction messages from/to client
service DemoSocket {
    // Send + MessageType
    rpc SendClientMessage(ClientMessage) returns (Empty);
    // Recv + MessageType
    rpc RecvServerMessage(ServerMessage) returns (Empty);
}

// Events(internal) can be subscribe to
service DemoEvent {
    // Subscribe + MessageType
    rpc SubscribeCreatedEvent(ThingCreatedEvent) returns (Empty);
}

// Queues(internal) of this service can be written to
service DemoQueue {
    // Push + MessageType
    rpc PushMessage(PublishMessage) returns (Empty);
    // Pop + MessageType
    rpc PopMessage(Empty) returns (PublishMessage);
}

message ClientMessage {

}

message ServerMessage {

}

message PublishMessage {

}

message ThingCreatedEvent {

}

message NewThing {
    string Mobile = 1;
    string Code = 2;
}

message NewThingResult {
    string Code = 1; // WeiXin code
    string Version = 10;
}